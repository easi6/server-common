/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.coupon.AvailCouponRequest', null, global);
goog.exportSymbol('proto.coupon.CancelCouponUseRequest', null, global);
goog.exportSymbol('proto.coupon.CheckCouponAvailRequest', null, global);
goog.exportSymbol('proto.coupon.CheckCouponReply', null, global);
goog.exportSymbol('proto.coupon.CouponCountReply', null, global);
goog.exportSymbol('proto.coupon.CouponCountRequest', null, global);
goog.exportSymbol('proto.coupon.CouponDetail', null, global);
goog.exportSymbol('proto.coupon.CouponDetailReply', null, global);
goog.exportSymbol('proto.coupon.CouponDetailRequest', null, global);
goog.exportSymbol('proto.coupon.CouponEntry', null, global);
goog.exportSymbol('proto.coupon.CouponLogEntry', null, global);
goog.exportSymbol('proto.coupon.CreatePromotionRequest', null, global);
goog.exportSymbol('proto.coupon.FinishCouponUseRequest', null, global);
goog.exportSymbol('proto.coupon.IssueCouponRequest', null, global);
goog.exportSymbol('proto.coupon.IssuePromotionCouponRequest', null, global);
goog.exportSymbol('proto.coupon.ListAvailCouponReply', null, global);
goog.exportSymbol('proto.coupon.ListCouponReply', null, global);
goog.exportSymbol('proto.coupon.ListCouponRequest', null, global);
goog.exportSymbol('proto.coupon.ListPromotionReply', null, global);
goog.exportSymbol('proto.coupon.ListPromotionRequest', null, global);
goog.exportSymbol('proto.coupon.Pagination', null, global);
goog.exportSymbol('proto.coupon.PromotionDetailReply', null, global);
goog.exportSymbol('proto.coupon.PromotionDetailRequest', null, global);
goog.exportSymbol('proto.coupon.PromotionEntry', null, global);
goog.exportSymbol('proto.coupon.RegisterCouponRequest', null, global);
goog.exportSymbol('proto.coupon.StartCouponUseRequest', null, global);
goog.exportSymbol('proto.coupon.Timespan', null, global);
goog.exportSymbol('proto.coupon.UpdatePromotionRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.Timespan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.Timespan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.Timespan.displayName = 'proto.coupon.Timespan';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.Timespan.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.Timespan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.Timespan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.Timespan.toObject = function(includeInstance, msg) {
  var f, obj = {
    begin: jspb.Message.getFieldWithDefault(msg, 1, 0),
    until: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.Timespan}
 */
proto.coupon.Timespan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.Timespan;
  return proto.coupon.Timespan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.Timespan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.Timespan}
 */
proto.coupon.Timespan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBegin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUntil(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.Timespan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.Timespan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.Timespan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.Timespan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBegin();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUntil();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 begin = 1;
 * @return {number}
 */
proto.coupon.Timespan.prototype.getBegin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.Timespan.prototype.setBegin = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 until = 2;
 * @return {number}
 */
proto.coupon.Timespan.prototype.getUntil = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.coupon.Timespan.prototype.setUntil = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.IssueCouponRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.IssueCouponRequest.repeatedFields_, null);
};
goog.inherits(proto.coupon.IssueCouponRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.IssueCouponRequest.displayName = 'proto.coupon.IssueCouponRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.IssueCouponRequest.repeatedFields_ = [8,9,10,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.IssueCouponRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.IssueCouponRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.IssueCouponRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.IssueCouponRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    code: jspb.Message.getFieldWithDefault(msg, 4, ""),
    discountType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amount: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 7, ""),
    regionsList: jspb.Message.getRepeatedField(msg, 8),
    citiesList: jspb.Message.getRepeatedField(msg, 9),
    carTypesList: jspb.Message.getRepeatedField(msg, 10),
    productTypesList: jspb.Message.getRepeatedField(msg, 11),
    timesList: jspb.Message.toObjectList(msg.getTimesList(),
    proto.coupon.Timespan.toObject, includeInstance),
    validFrom: jspb.Message.getFieldWithDefault(msg, 13, ""),
    validUntil: jspb.Message.getFieldWithDefault(msg, 14, ""),
    hiredOnly: jspb.Message.getFieldWithDefault(msg, 15, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.IssueCouponRequest}
 */
proto.coupon.IssueCouponRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.IssueCouponRequest;
  return proto.coupon.IssueCouponRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.IssueCouponRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.IssueCouponRequest}
 */
proto.coupon.IssueCouponRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDiscountType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegions(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addCities(value);
      break;
    case 10:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setCarTypesList(value);
      break;
    case 11:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setProductTypesList(value);
      break;
    case 12:
      var value = new proto.coupon.Timespan;
      reader.readMessage(value,proto.coupon.Timespan.deserializeBinaryFromReader);
      msg.addTimes(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidUntil(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHiredOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.IssueCouponRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.IssueCouponRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.IssueCouponRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.IssueCouponRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDiscountType();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getCarTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      10,
      f
    );
  }
  f = message.getProductTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      11,
      f
    );
  }
  f = message.getTimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.coupon.Timespan.serializeBinaryToWriter
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getValidUntil();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getHiredOnly();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.coupon.IssueCouponRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.IssueCouponRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.coupon.IssueCouponRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.IssueCouponRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.coupon.IssueCouponRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.coupon.IssueCouponRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string code = 4;
 * @return {string}
 */
proto.coupon.IssueCouponRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.coupon.IssueCouponRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 discount_type = 5;
 * @return {number}
 */
proto.coupon.IssueCouponRequest.prototype.getDiscountType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.coupon.IssueCouponRequest.prototype.setDiscountType = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double amount = 6;
 * @return {number}
 */
proto.coupon.IssueCouponRequest.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.coupon.IssueCouponRequest.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string currency = 7;
 * @return {string}
 */
proto.coupon.IssueCouponRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.coupon.IssueCouponRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string regions = 8;
 * @return {!Array<string>}
 */
proto.coupon.IssueCouponRequest.prototype.getRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.coupon.IssueCouponRequest.prototype.setRegionsList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.IssueCouponRequest.prototype.addRegions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.coupon.IssueCouponRequest.prototype.clearRegionsList = function() {
  this.setRegionsList([]);
};


/**
 * repeated string cities = 9;
 * @return {!Array<string>}
 */
proto.coupon.IssueCouponRequest.prototype.getCitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<string>} value */
proto.coupon.IssueCouponRequest.prototype.setCitiesList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.IssueCouponRequest.prototype.addCities = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.coupon.IssueCouponRequest.prototype.clearCitiesList = function() {
  this.setCitiesList([]);
};


/**
 * repeated uint32 car_types = 10;
 * @return {!Array<number>}
 */
proto.coupon.IssueCouponRequest.prototype.getCarTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<number>} value */
proto.coupon.IssueCouponRequest.prototype.setCarTypesList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.IssueCouponRequest.prototype.addCarTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.coupon.IssueCouponRequest.prototype.clearCarTypesList = function() {
  this.setCarTypesList([]);
};


/**
 * repeated uint32 product_types = 11;
 * @return {!Array<number>}
 */
proto.coupon.IssueCouponRequest.prototype.getProductTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<number>} value */
proto.coupon.IssueCouponRequest.prototype.setProductTypesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.IssueCouponRequest.prototype.addProductTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.coupon.IssueCouponRequest.prototype.clearProductTypesList = function() {
  this.setProductTypesList([]);
};


/**
 * repeated Timespan times = 12;
 * @return {!Array<!proto.coupon.Timespan>}
 */
proto.coupon.IssueCouponRequest.prototype.getTimesList = function() {
  return /** @type{!Array<!proto.coupon.Timespan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.Timespan, 12));
};


/** @param {!Array<!proto.coupon.Timespan>} value */
proto.coupon.IssueCouponRequest.prototype.setTimesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.coupon.Timespan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.Timespan}
 */
proto.coupon.IssueCouponRequest.prototype.addTimes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.coupon.Timespan, opt_index);
};


proto.coupon.IssueCouponRequest.prototype.clearTimesList = function() {
  this.setTimesList([]);
};


/**
 * optional string valid_from = 13;
 * @return {string}
 */
proto.coupon.IssueCouponRequest.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.coupon.IssueCouponRequest.prototype.setValidFrom = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string valid_until = 14;
 * @return {string}
 */
proto.coupon.IssueCouponRequest.prototype.getValidUntil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.coupon.IssueCouponRequest.prototype.setValidUntil = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool hired_only = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.IssueCouponRequest.prototype.getHiredOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.coupon.IssueCouponRequest.prototype.setHiredOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 15, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.ListCouponRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.ListCouponRequest.repeatedFields_, null);
};
goog.inherits(proto.coupon.ListCouponRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.ListCouponRequest.displayName = 'proto.coupon.ListCouponRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.ListCouponRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.ListCouponRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.ListCouponRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.ListCouponRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListCouponRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    statusList: jspb.Message.getRepeatedField(msg, 2),
    valid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    page: jspb.Message.getFieldWithDefault(msg, 4, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.ListCouponRequest}
 */
proto.coupon.ListCouponRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.ListCouponRequest;
  return proto.coupon.ListCouponRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.ListCouponRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.ListCouponRequest}
 */
proto.coupon.ListCouponRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setStatusList(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.ListCouponRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.ListCouponRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.ListCouponRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListCouponRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
  f = message.getValid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.coupon.ListCouponRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.ListCouponRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated uint32 status = 2;
 * @return {!Array<number>}
 */
proto.coupon.ListCouponRequest.prototype.getStatusList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.coupon.ListCouponRequest.prototype.setStatusList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.ListCouponRequest.prototype.addStatus = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.coupon.ListCouponRequest.prototype.clearStatusList = function() {
  this.setStatusList([]);
};


/**
 * optional uint64 valid = 3;
 * @return {number}
 */
proto.coupon.ListCouponRequest.prototype.getValid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.coupon.ListCouponRequest.prototype.setValid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 page = 4;
 * @return {number}
 */
proto.coupon.ListCouponRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.coupon.ListCouponRequest.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 limit = 5;
 * @return {number}
 */
proto.coupon.ListCouponRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.coupon.ListCouponRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CouponEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.CouponEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CouponEntry.displayName = 'proto.coupon.CouponEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CouponEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CouponEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CouponEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    avail: jspb.Message.getFieldWithDefault(msg, 6, false),
    validUntil: jspb.Message.getFieldWithDefault(msg, 7, ""),
    discountType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    amount: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 10, ""),
    validFrom: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CouponEntry}
 */
proto.coupon.CouponEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CouponEntry;
  return proto.coupon.CouponEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CouponEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CouponEntry}
 */
proto.coupon.CouponEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidUntil(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDiscountType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CouponEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CouponEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CouponEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAvail();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getValidUntil();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDiscountType();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.coupon.CouponEntry.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.CouponEntry.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.coupon.CouponEntry.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.CouponEntry.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.coupon.CouponEntry.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.coupon.CouponEntry.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 status = 4;
 * @return {number}
 */
proto.coupon.CouponEntry.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.coupon.CouponEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string image_url = 5;
 * @return {string}
 */
proto.coupon.CouponEntry.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.coupon.CouponEntry.prototype.setImageUrl = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool avail = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.CouponEntry.prototype.getAvail = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.coupon.CouponEntry.prototype.setAvail = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string valid_until = 7;
 * @return {string}
 */
proto.coupon.CouponEntry.prototype.getValidUntil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.coupon.CouponEntry.prototype.setValidUntil = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint32 discount_type = 8;
 * @return {number}
 */
proto.coupon.CouponEntry.prototype.getDiscountType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.coupon.CouponEntry.prototype.setDiscountType = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional double amount = 9;
 * @return {number}
 */
proto.coupon.CouponEntry.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.coupon.CouponEntry.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string currency = 10;
 * @return {string}
 */
proto.coupon.CouponEntry.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.coupon.CouponEntry.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string valid_from = 11;
 * @return {string}
 */
proto.coupon.CouponEntry.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.coupon.CouponEntry.prototype.setValidFrom = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CouponDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.CouponDetail.repeatedFields_, null);
};
goog.inherits(proto.coupon.CouponDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CouponDetail.displayName = 'proto.coupon.CouponDetail';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.CouponDetail.repeatedFields_ = [10,11,12,13,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CouponDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CouponDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CouponDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    code: jspb.Message.getFieldWithDefault(msg, 6, ""),
    discountType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    amount: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 9, ""),
    regionsList: jspb.Message.getRepeatedField(msg, 10),
    citiesList: jspb.Message.getRepeatedField(msg, 11),
    carTypesList: jspb.Message.getRepeatedField(msg, 12),
    productTypesList: jspb.Message.getRepeatedField(msg, 13),
    timesList: jspb.Message.toObjectList(msg.getTimesList(),
    proto.coupon.Timespan.toObject, includeInstance),
    hiredOnly: jspb.Message.getFieldWithDefault(msg, 15, false),
    validUntil: jspb.Message.getFieldWithDefault(msg, 16, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 17, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 18, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 19, ""),
    validFrom: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CouponDetail}
 */
proto.coupon.CouponDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CouponDetail;
  return proto.coupon.CouponDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CouponDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CouponDetail}
 */
proto.coupon.CouponDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDiscountType(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegions(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addCities(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setCarTypesList(value);
      break;
    case 13:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setProductTypesList(value);
      break;
    case 14:
      var value = new proto.coupon.Timespan;
      reader.readMessage(value,proto.coupon.Timespan.deserializeBinaryFromReader);
      msg.addTimes(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHiredOnly(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidUntil(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CouponDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CouponDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CouponDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDiscountType();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getCarTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      12,
      f
    );
  }
  f = message.getProductTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      13,
      f
    );
  }
  f = message.getTimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.coupon.Timespan.serializeBinaryToWriter
    );
  }
  f = message.getHiredOnly();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getValidUntil();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.coupon.CouponDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.CouponDetail.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string image_url = 4;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setImageUrl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 status = 5;
 * @return {number}
 */
proto.coupon.CouponDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.coupon.CouponDetail.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string code = 6;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 discount_type = 7;
 * @return {number}
 */
proto.coupon.CouponDetail.prototype.getDiscountType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.coupon.CouponDetail.prototype.setDiscountType = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double amount = 8;
 * @return {number}
 */
proto.coupon.CouponDetail.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.coupon.CouponDetail.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string currency = 9;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string regions = 10;
 * @return {!Array<string>}
 */
proto.coupon.CouponDetail.prototype.getRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.coupon.CouponDetail.prototype.setRegionsList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.CouponDetail.prototype.addRegions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.coupon.CouponDetail.prototype.clearRegionsList = function() {
  this.setRegionsList([]);
};


/**
 * repeated string cities = 11;
 * @return {!Array<string>}
 */
proto.coupon.CouponDetail.prototype.getCitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<string>} value */
proto.coupon.CouponDetail.prototype.setCitiesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.CouponDetail.prototype.addCities = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.coupon.CouponDetail.prototype.clearCitiesList = function() {
  this.setCitiesList([]);
};


/**
 * repeated uint32 car_types = 12;
 * @return {!Array<number>}
 */
proto.coupon.CouponDetail.prototype.getCarTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.coupon.CouponDetail.prototype.setCarTypesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.CouponDetail.prototype.addCarTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.coupon.CouponDetail.prototype.clearCarTypesList = function() {
  this.setCarTypesList([]);
};


/**
 * repeated uint32 product_types = 13;
 * @return {!Array<number>}
 */
proto.coupon.CouponDetail.prototype.getProductTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<number>} value */
proto.coupon.CouponDetail.prototype.setProductTypesList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.CouponDetail.prototype.addProductTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


proto.coupon.CouponDetail.prototype.clearProductTypesList = function() {
  this.setProductTypesList([]);
};


/**
 * repeated Timespan times = 14;
 * @return {!Array<!proto.coupon.Timespan>}
 */
proto.coupon.CouponDetail.prototype.getTimesList = function() {
  return /** @type{!Array<!proto.coupon.Timespan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.Timespan, 14));
};


/** @param {!Array<!proto.coupon.Timespan>} value */
proto.coupon.CouponDetail.prototype.setTimesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.coupon.Timespan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.Timespan}
 */
proto.coupon.CouponDetail.prototype.addTimes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.coupon.Timespan, opt_index);
};


proto.coupon.CouponDetail.prototype.clearTimesList = function() {
  this.setTimesList([]);
};


/**
 * optional bool hired_only = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.CouponDetail.prototype.getHiredOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.coupon.CouponDetail.prototype.setHiredOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string valid_until = 16;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getValidUntil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setValidUntil = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string user_id = 17;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string created_at = 18;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string updated_at = 19;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setUpdatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string valid_from = 20;
 * @return {string}
 */
proto.coupon.CouponDetail.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.coupon.CouponDetail.prototype.setValidFrom = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CouponLogEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.CouponLogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CouponLogEntry.displayName = 'proto.coupon.CouponLogEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CouponLogEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CouponLogEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CouponLogEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponLogEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    originalPrice: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    discountedPrice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    rentalNumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    couponId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CouponLogEntry}
 */
proto.coupon.CouponLogEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CouponLogEntry;
  return proto.coupon.CouponLogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CouponLogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CouponLogEntry}
 */
proto.coupon.CouponLogEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOriginalPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountedPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRentalNumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCouponId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CouponLogEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CouponLogEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CouponLogEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponLogEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOriginalPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDiscountedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getRentalNumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCouponId();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.coupon.CouponLogEntry.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.CouponLogEntry.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double original_price = 2;
 * @return {number}
 */
proto.coupon.CouponLogEntry.prototype.getOriginalPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.coupon.CouponLogEntry.prototype.setOriginalPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double discounted_price = 3;
 * @return {number}
 */
proto.coupon.CouponLogEntry.prototype.getDiscountedPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.coupon.CouponLogEntry.prototype.setDiscountedPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string rental_number = 4;
 * @return {string}
 */
proto.coupon.CouponLogEntry.prototype.getRentalNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.coupon.CouponLogEntry.prototype.setRentalNumber = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 coupon_id = 5;
 * @return {number}
 */
proto.coupon.CouponLogEntry.prototype.getCouponId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.coupon.CouponLogEntry.prototype.setCouponId = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.coupon.CouponLogEntry.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.coupon.CouponLogEntry.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.coupon.CouponLogEntry.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.coupon.CouponLogEntry.prototype.setUpdatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.ListCouponReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.ListCouponReply.repeatedFields_, proto.coupon.ListCouponReply.oneofGroups_);
};
goog.inherits(proto.coupon.ListCouponReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.ListCouponReply.displayName = 'proto.coupon.ListCouponReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.ListCouponReply.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.coupon.ListCouponReply.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.coupon.ListCouponReply.PageCase = {
  PAGE_NOT_SET: 0,
  HAS_NEXT: 2,
  PAGINATION: 3
};

/**
 * @return {proto.coupon.ListCouponReply.PageCase}
 */
proto.coupon.ListCouponReply.prototype.getPageCase = function() {
  return /** @type {proto.coupon.ListCouponReply.PageCase} */(jspb.Message.computeOneofCase(this, proto.coupon.ListCouponReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.ListCouponReply.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.ListCouponReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.ListCouponReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListCouponReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    couponsList: jspb.Message.toObjectList(msg.getCouponsList(),
    proto.coupon.CouponEntry.toObject, includeInstance),
    hasNext: jspb.Message.getFieldWithDefault(msg, 2, false),
    pagination: (f = msg.getPagination()) && proto.coupon.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.ListCouponReply}
 */
proto.coupon.ListCouponReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.ListCouponReply;
  return proto.coupon.ListCouponReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.ListCouponReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.ListCouponReply}
 */
proto.coupon.ListCouponReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.coupon.CouponEntry;
      reader.readMessage(value,proto.coupon.CouponEntry.deserializeBinaryFromReader);
      msg.addCoupons(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasNext(value);
      break;
    case 3:
      var value = new proto.coupon.Pagination;
      reader.readMessage(value,proto.coupon.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.ListCouponReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.ListCouponReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.ListCouponReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListCouponReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCouponsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.coupon.CouponEntry.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.coupon.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CouponEntry coupons = 1;
 * @return {!Array<!proto.coupon.CouponEntry>}
 */
proto.coupon.ListCouponReply.prototype.getCouponsList = function() {
  return /** @type{!Array<!proto.coupon.CouponEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.CouponEntry, 1));
};


/** @param {!Array<!proto.coupon.CouponEntry>} value */
proto.coupon.ListCouponReply.prototype.setCouponsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.coupon.CouponEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.CouponEntry}
 */
proto.coupon.ListCouponReply.prototype.addCoupons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.coupon.CouponEntry, opt_index);
};


proto.coupon.ListCouponReply.prototype.clearCouponsList = function() {
  this.setCouponsList([]);
};


/**
 * optional bool has_next = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.ListCouponReply.prototype.getHasNext = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.coupon.ListCouponReply.prototype.setHasNext = function(value) {
  jspb.Message.setOneofField(this, 2, proto.coupon.ListCouponReply.oneofGroups_[0], value);
};


proto.coupon.ListCouponReply.prototype.clearHasNext = function() {
  jspb.Message.setOneofField(this, 2, proto.coupon.ListCouponReply.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.coupon.ListCouponReply.prototype.hasHasNext = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.coupon.Pagination}
 */
proto.coupon.ListCouponReply.prototype.getPagination = function() {
  return /** @type{?proto.coupon.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.coupon.Pagination, 3));
};


/** @param {?proto.coupon.Pagination|undefined} value */
proto.coupon.ListCouponReply.prototype.setPagination = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.coupon.ListCouponReply.oneofGroups_[0], value);
};


proto.coupon.ListCouponReply.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.coupon.ListCouponReply.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.Pagination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.Pagination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.Pagination.displayName = 'proto.coupon.Pagination';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.Pagination.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.Pagination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.Pagination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.Pagination.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalElements: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalPages: jspb.Message.getFieldWithDefault(msg, 3, 0),
    page: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.Pagination}
 */
proto.coupon.Pagination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.Pagination;
  return proto.coupon.Pagination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.Pagination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.Pagination}
 */
proto.coupon.Pagination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalElements(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalPages(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.Pagination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.Pagination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.Pagination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.Pagination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTotalElements();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTotalPages();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint32 size = 1;
 * @return {number}
 */
proto.coupon.Pagination.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.Pagination.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 total_elements = 2;
 * @return {number}
 */
proto.coupon.Pagination.prototype.getTotalElements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.coupon.Pagination.prototype.setTotalElements = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 total_pages = 3;
 * @return {number}
 */
proto.coupon.Pagination.prototype.getTotalPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.coupon.Pagination.prototype.setTotalPages = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 page = 4;
 * @return {number}
 */
proto.coupon.Pagination.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.coupon.Pagination.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.StartCouponUseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.StartCouponUseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.StartCouponUseRequest.displayName = 'proto.coupon.StartCouponUseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.StartCouponUseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.StartCouponUseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.StartCouponUseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.StartCouponUseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.StartCouponUseRequest}
 */
proto.coupon.StartCouponUseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.StartCouponUseRequest;
  return proto.coupon.StartCouponUseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.StartCouponUseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.StartCouponUseRequest}
 */
proto.coupon.StartCouponUseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.StartCouponUseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.StartCouponUseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.StartCouponUseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.StartCouponUseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.coupon.StartCouponUseRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.StartCouponUseRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.coupon.StartCouponUseRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.StartCouponUseRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.FinishCouponUseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.FinishCouponUseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.FinishCouponUseRequest.displayName = 'proto.coupon.FinishCouponUseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.FinishCouponUseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.FinishCouponUseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.FinishCouponUseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.FinishCouponUseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    originalPrice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    discountedPrice: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    rentalNumber: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.FinishCouponUseRequest}
 */
proto.coupon.FinishCouponUseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.FinishCouponUseRequest;
  return proto.coupon.FinishCouponUseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.FinishCouponUseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.FinishCouponUseRequest}
 */
proto.coupon.FinishCouponUseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOriginalPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountedPrice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRentalNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.FinishCouponUseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.FinishCouponUseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.FinishCouponUseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.FinishCouponUseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOriginalPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getDiscountedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getRentalNumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.coupon.FinishCouponUseRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.FinishCouponUseRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.coupon.FinishCouponUseRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.FinishCouponUseRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double original_price = 3;
 * @return {number}
 */
proto.coupon.FinishCouponUseRequest.prototype.getOriginalPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.coupon.FinishCouponUseRequest.prototype.setOriginalPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double discounted_price = 4;
 * @return {number}
 */
proto.coupon.FinishCouponUseRequest.prototype.getDiscountedPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.coupon.FinishCouponUseRequest.prototype.setDiscountedPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string rental_number = 5;
 * @return {string}
 */
proto.coupon.FinishCouponUseRequest.prototype.getRentalNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.coupon.FinishCouponUseRequest.prototype.setRentalNumber = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CancelCouponUseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.CancelCouponUseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CancelCouponUseRequest.displayName = 'proto.coupon.CancelCouponUseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CancelCouponUseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CancelCouponUseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CancelCouponUseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CancelCouponUseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CancelCouponUseRequest}
 */
proto.coupon.CancelCouponUseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CancelCouponUseRequest;
  return proto.coupon.CancelCouponUseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CancelCouponUseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CancelCouponUseRequest}
 */
proto.coupon.CancelCouponUseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CancelCouponUseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CancelCouponUseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CancelCouponUseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CancelCouponUseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.coupon.CancelCouponUseRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.CancelCouponUseRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.coupon.CancelCouponUseRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.CancelCouponUseRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CouponDetailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.CouponDetailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CouponDetailRequest.displayName = 'proto.coupon.CouponDetailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CouponDetailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CouponDetailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CouponDetailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponDetailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CouponDetailRequest}
 */
proto.coupon.CouponDetailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CouponDetailRequest;
  return proto.coupon.CouponDetailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CouponDetailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CouponDetailRequest}
 */
proto.coupon.CouponDetailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CouponDetailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CouponDetailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CouponDetailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponDetailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.coupon.CouponDetailRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.CouponDetailRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CouponDetailReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.CouponDetailReply.repeatedFields_, null);
};
goog.inherits(proto.coupon.CouponDetailReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CouponDetailReply.displayName = 'proto.coupon.CouponDetailReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.CouponDetailReply.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CouponDetailReply.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CouponDetailReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CouponDetailReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponDetailReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    coupon: (f = msg.getCoupon()) && proto.coupon.CouponDetail.toObject(includeInstance, f),
    logsList: jspb.Message.toObjectList(msg.getLogsList(),
    proto.coupon.CouponLogEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CouponDetailReply}
 */
proto.coupon.CouponDetailReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CouponDetailReply;
  return proto.coupon.CouponDetailReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CouponDetailReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CouponDetailReply}
 */
proto.coupon.CouponDetailReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.coupon.CouponDetail;
      reader.readMessage(value,proto.coupon.CouponDetail.deserializeBinaryFromReader);
      msg.setCoupon(value);
      break;
    case 2:
      var value = new proto.coupon.CouponLogEntry;
      reader.readMessage(value,proto.coupon.CouponLogEntry.deserializeBinaryFromReader);
      msg.addLogs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CouponDetailReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CouponDetailReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CouponDetailReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponDetailReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoupon();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.coupon.CouponDetail.serializeBinaryToWriter
    );
  }
  f = message.getLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.coupon.CouponLogEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional CouponDetail coupon = 1;
 * @return {?proto.coupon.CouponDetail}
 */
proto.coupon.CouponDetailReply.prototype.getCoupon = function() {
  return /** @type{?proto.coupon.CouponDetail} */ (
    jspb.Message.getWrapperField(this, proto.coupon.CouponDetail, 1));
};


/** @param {?proto.coupon.CouponDetail|undefined} value */
proto.coupon.CouponDetailReply.prototype.setCoupon = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.coupon.CouponDetailReply.prototype.clearCoupon = function() {
  this.setCoupon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.coupon.CouponDetailReply.prototype.hasCoupon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CouponLogEntry logs = 2;
 * @return {!Array<!proto.coupon.CouponLogEntry>}
 */
proto.coupon.CouponDetailReply.prototype.getLogsList = function() {
  return /** @type{!Array<!proto.coupon.CouponLogEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.CouponLogEntry, 2));
};


/** @param {!Array<!proto.coupon.CouponLogEntry>} value */
proto.coupon.CouponDetailReply.prototype.setLogsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.coupon.CouponLogEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.CouponLogEntry}
 */
proto.coupon.CouponDetailReply.prototype.addLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.coupon.CouponLogEntry, opt_index);
};


proto.coupon.CouponDetailReply.prototype.clearLogsList = function() {
  this.setLogsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.ListAvailCouponReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.ListAvailCouponReply.repeatedFields_, null);
};
goog.inherits(proto.coupon.ListAvailCouponReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.ListAvailCouponReply.displayName = 'proto.coupon.ListAvailCouponReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.ListAvailCouponReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.ListAvailCouponReply.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.ListAvailCouponReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.ListAvailCouponReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListAvailCouponReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    couponsList: jspb.Message.toObjectList(msg.getCouponsList(),
    proto.coupon.CouponEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.ListAvailCouponReply}
 */
proto.coupon.ListAvailCouponReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.ListAvailCouponReply;
  return proto.coupon.ListAvailCouponReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.ListAvailCouponReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.ListAvailCouponReply}
 */
proto.coupon.ListAvailCouponReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.coupon.CouponEntry;
      reader.readMessage(value,proto.coupon.CouponEntry.deserializeBinaryFromReader);
      msg.addCoupons(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.ListAvailCouponReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.ListAvailCouponReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.ListAvailCouponReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListAvailCouponReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCouponsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.coupon.CouponEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CouponEntry coupons = 1;
 * @return {!Array<!proto.coupon.CouponEntry>}
 */
proto.coupon.ListAvailCouponReply.prototype.getCouponsList = function() {
  return /** @type{!Array<!proto.coupon.CouponEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.CouponEntry, 1));
};


/** @param {!Array<!proto.coupon.CouponEntry>} value */
proto.coupon.ListAvailCouponReply.prototype.setCouponsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.coupon.CouponEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.CouponEntry}
 */
proto.coupon.ListAvailCouponReply.prototype.addCoupons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.coupon.CouponEntry, opt_index);
};


proto.coupon.ListAvailCouponReply.prototype.clearCouponsList = function() {
  this.setCouponsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.AvailCouponRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.AvailCouponRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.AvailCouponRequest.displayName = 'proto.coupon.AvailCouponRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.AvailCouponRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.AvailCouponRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.AvailCouponRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.AvailCouponRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    carType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    productType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    region: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    datetime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fare: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 7, ""),
    timezone: jspb.Message.getFieldWithDefault(msg, 8, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.AvailCouponRequest}
 */
proto.coupon.AvailCouponRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.AvailCouponRequest;
  return proto.coupon.AvailCouponRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.AvailCouponRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.AvailCouponRequest}
 */
proto.coupon.AvailCouponRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCarType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProductType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatetime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFare(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimezone(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.AvailCouponRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.AvailCouponRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.AvailCouponRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.AvailCouponRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarType();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getProductType();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDatetime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFare();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTimezone();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional uint32 car_type = 1;
 * @return {number}
 */
proto.coupon.AvailCouponRequest.prototype.getCarType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.AvailCouponRequest.prototype.setCarType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 product_type = 2;
 * @return {number}
 */
proto.coupon.AvailCouponRequest.prototype.getProductType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.coupon.AvailCouponRequest.prototype.setProductType = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string region = 3;
 * @return {string}
 */
proto.coupon.AvailCouponRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.coupon.AvailCouponRequest.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.coupon.AvailCouponRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.coupon.AvailCouponRequest.prototype.setCity = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string datetime = 5;
 * @return {string}
 */
proto.coupon.AvailCouponRequest.prototype.getDatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.coupon.AvailCouponRequest.prototype.setDatetime = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double fare = 6;
 * @return {number}
 */
proto.coupon.AvailCouponRequest.prototype.getFare = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.coupon.AvailCouponRequest.prototype.setFare = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string currency = 7;
 * @return {string}
 */
proto.coupon.AvailCouponRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.coupon.AvailCouponRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint32 timezone = 8;
 * @return {number}
 */
proto.coupon.AvailCouponRequest.prototype.getTimezone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.coupon.AvailCouponRequest.prototype.setTimezone = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string user_id = 9;
 * @return {string}
 */
proto.coupon.AvailCouponRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.coupon.AvailCouponRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CreatePromotionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.CreatePromotionRequest.repeatedFields_, null);
};
goog.inherits(proto.coupon.CreatePromotionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CreatePromotionRequest.displayName = 'proto.coupon.CreatePromotionRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.CreatePromotionRequest.repeatedFields_ = [10,11,12,13,14,19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CreatePromotionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CreatePromotionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CreatePromotionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CreatePromotionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    discountType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amount: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    countLimit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    totalCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    countCheckPolicy: jspb.Message.getFieldWithDefault(msg, 9, 0),
    regionsList: jspb.Message.getRepeatedField(msg, 10),
    citiesList: jspb.Message.getRepeatedField(msg, 11),
    carTypesList: jspb.Message.getRepeatedField(msg, 12),
    productTypesList: jspb.Message.getRepeatedField(msg, 13),
    timesList: jspb.Message.toObjectList(msg.getTimesList(),
    proto.coupon.Timespan.toObject, includeInstance),
    validFrom: jspb.Message.getFieldWithDefault(msg, 15, ""),
    validUntil: jspb.Message.getFieldWithDefault(msg, 16, ""),
    hiredOnly: jspb.Message.getFieldWithDefault(msg, 17, false),
    implicit: jspb.Message.getFieldWithDefault(msg, 18, false),
    paymentMethodsList: jspb.Message.getRepeatedField(msg, 19)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CreatePromotionRequest}
 */
proto.coupon.CreatePromotionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CreatePromotionRequest;
  return proto.coupon.CreatePromotionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CreatePromotionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CreatePromotionRequest}
 */
proto.coupon.CreatePromotionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDiscountType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCountLimit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCountCheckPolicy(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegions(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addCities(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setCarTypesList(value);
      break;
    case 13:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setProductTypesList(value);
      break;
    case 14:
      var value = new proto.coupon.Timespan;
      reader.readMessage(value,proto.coupon.Timespan.deserializeBinaryFromReader);
      msg.addTimes(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidUntil(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHiredOnly(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImplicit(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.addPaymentMethods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CreatePromotionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CreatePromotionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CreatePromotionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CreatePromotionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDiscountType();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountLimit();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getCountCheckPolicy();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getCarTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      12,
      f
    );
  }
  f = message.getProductTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      13,
      f
    );
  }
  f = message.getTimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.coupon.Timespan.serializeBinaryToWriter
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getValidUntil();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getHiredOnly();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getImplicit();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getPaymentMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      19,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.coupon.CreatePromotionRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.CreatePromotionRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.coupon.CreatePromotionRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.CreatePromotionRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.coupon.CreatePromotionRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.coupon.CreatePromotionRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 discount_type = 4;
 * @return {number}
 */
proto.coupon.CreatePromotionRequest.prototype.getDiscountType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.coupon.CreatePromotionRequest.prototype.setDiscountType = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double amount = 5;
 * @return {number}
 */
proto.coupon.CreatePromotionRequest.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.coupon.CreatePromotionRequest.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.coupon.CreatePromotionRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.coupon.CreatePromotionRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 count_limit = 7;
 * @return {number}
 */
proto.coupon.CreatePromotionRequest.prototype.getCountLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.coupon.CreatePromotionRequest.prototype.setCountLimit = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 total_count = 8;
 * @return {number}
 */
proto.coupon.CreatePromotionRequest.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.coupon.CreatePromotionRequest.prototype.setTotalCount = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 count_check_policy = 9;
 * @return {number}
 */
proto.coupon.CreatePromotionRequest.prototype.getCountCheckPolicy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.coupon.CreatePromotionRequest.prototype.setCountCheckPolicy = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string regions = 10;
 * @return {!Array<string>}
 */
proto.coupon.CreatePromotionRequest.prototype.getRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.coupon.CreatePromotionRequest.prototype.setRegionsList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.CreatePromotionRequest.prototype.addRegions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.coupon.CreatePromotionRequest.prototype.clearRegionsList = function() {
  this.setRegionsList([]);
};


/**
 * repeated string cities = 11;
 * @return {!Array<string>}
 */
proto.coupon.CreatePromotionRequest.prototype.getCitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<string>} value */
proto.coupon.CreatePromotionRequest.prototype.setCitiesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.CreatePromotionRequest.prototype.addCities = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.coupon.CreatePromotionRequest.prototype.clearCitiesList = function() {
  this.setCitiesList([]);
};


/**
 * repeated uint32 car_types = 12;
 * @return {!Array<number>}
 */
proto.coupon.CreatePromotionRequest.prototype.getCarTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.coupon.CreatePromotionRequest.prototype.setCarTypesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.CreatePromotionRequest.prototype.addCarTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.coupon.CreatePromotionRequest.prototype.clearCarTypesList = function() {
  this.setCarTypesList([]);
};


/**
 * repeated uint32 product_types = 13;
 * @return {!Array<number>}
 */
proto.coupon.CreatePromotionRequest.prototype.getProductTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<number>} value */
proto.coupon.CreatePromotionRequest.prototype.setProductTypesList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.CreatePromotionRequest.prototype.addProductTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


proto.coupon.CreatePromotionRequest.prototype.clearProductTypesList = function() {
  this.setProductTypesList([]);
};


/**
 * repeated Timespan times = 14;
 * @return {!Array<!proto.coupon.Timespan>}
 */
proto.coupon.CreatePromotionRequest.prototype.getTimesList = function() {
  return /** @type{!Array<!proto.coupon.Timespan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.Timespan, 14));
};


/** @param {!Array<!proto.coupon.Timespan>} value */
proto.coupon.CreatePromotionRequest.prototype.setTimesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.coupon.Timespan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.Timespan}
 */
proto.coupon.CreatePromotionRequest.prototype.addTimes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.coupon.Timespan, opt_index);
};


proto.coupon.CreatePromotionRequest.prototype.clearTimesList = function() {
  this.setTimesList([]);
};


/**
 * optional string valid_from = 15;
 * @return {string}
 */
proto.coupon.CreatePromotionRequest.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.coupon.CreatePromotionRequest.prototype.setValidFrom = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string valid_until = 16;
 * @return {string}
 */
proto.coupon.CreatePromotionRequest.prototype.getValidUntil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.coupon.CreatePromotionRequest.prototype.setValidUntil = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bool hired_only = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.CreatePromotionRequest.prototype.getHiredOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.coupon.CreatePromotionRequest.prototype.setHiredOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool implicit = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.CreatePromotionRequest.prototype.getImplicit = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.coupon.CreatePromotionRequest.prototype.setImplicit = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * repeated string payment_methods = 19;
 * @return {!Array<string>}
 */
proto.coupon.CreatePromotionRequest.prototype.getPaymentMethodsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 19));
};


/** @param {!Array<string>} value */
proto.coupon.CreatePromotionRequest.prototype.setPaymentMethodsList = function(value) {
  jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.CreatePromotionRequest.prototype.addPaymentMethods = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


proto.coupon.CreatePromotionRequest.prototype.clearPaymentMethodsList = function() {
  this.setPaymentMethodsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.PromotionEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.PromotionEntry.repeatedFields_, null);
};
goog.inherits(proto.coupon.PromotionEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.PromotionEntry.displayName = 'proto.coupon.PromotionEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.PromotionEntry.repeatedFields_ = [11,12,13,14,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.PromotionEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.PromotionEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.PromotionEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.PromotionEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    discountType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amount: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),
    totalCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    title: jspb.Message.getFieldWithDefault(msg, 9, ""),
    regionsList: jspb.Message.getRepeatedField(msg, 11),
    citiesList: jspb.Message.getRepeatedField(msg, 12),
    carTypesList: jspb.Message.getRepeatedField(msg, 13),
    productTypesList: jspb.Message.getRepeatedField(msg, 14),
    validFrom: jspb.Message.getFieldWithDefault(msg, 16, ""),
    validUntil: jspb.Message.getFieldWithDefault(msg, 17, ""),
    enabled: jspb.Message.getFieldWithDefault(msg, 18, false),
    createdAt: jspb.Message.getFieldWithDefault(msg, 19, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 20, ""),
    paymentMethodsList: jspb.Message.getRepeatedField(msg, 21)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.PromotionEntry}
 */
proto.coupon.PromotionEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.PromotionEntry;
  return proto.coupon.PromotionEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.PromotionEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.PromotionEntry}
 */
proto.coupon.PromotionEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDiscountType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCountLimit(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegions(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addCities(value);
      break;
    case 13:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setCarTypesList(value);
      break;
    case 14:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setProductTypesList(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidUntil(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addPaymentMethods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.PromotionEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.PromotionEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.PromotionEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.PromotionEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDiscountType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountLimit();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getCarTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      13,
      f
    );
  }
  f = message.getProductTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      14,
      f
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getValidUntil();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getPaymentMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.coupon.PromotionEntry.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.PromotionEntry.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.coupon.PromotionEntry.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.PromotionEntry.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 discount_type = 3;
 * @return {number}
 */
proto.coupon.PromotionEntry.prototype.getDiscountType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.coupon.PromotionEntry.prototype.setDiscountType = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double amount = 4;
 * @return {number}
 */
proto.coupon.PromotionEntry.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.coupon.PromotionEntry.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string currency = 5;
 * @return {string}
 */
proto.coupon.PromotionEntry.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.coupon.PromotionEntry.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 count_limit = 6;
 * @return {number}
 */
proto.coupon.PromotionEntry.prototype.getCountLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.coupon.PromotionEntry.prototype.setCountLimit = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 total_count = 7;
 * @return {number}
 */
proto.coupon.PromotionEntry.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.coupon.PromotionEntry.prototype.setTotalCount = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string title = 9;
 * @return {string}
 */
proto.coupon.PromotionEntry.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.coupon.PromotionEntry.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string regions = 11;
 * @return {!Array<string>}
 */
proto.coupon.PromotionEntry.prototype.getRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<string>} value */
proto.coupon.PromotionEntry.prototype.setRegionsList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionEntry.prototype.addRegions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.coupon.PromotionEntry.prototype.clearRegionsList = function() {
  this.setRegionsList([]);
};


/**
 * repeated string cities = 12;
 * @return {!Array<string>}
 */
proto.coupon.PromotionEntry.prototype.getCitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<string>} value */
proto.coupon.PromotionEntry.prototype.setCitiesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionEntry.prototype.addCities = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.coupon.PromotionEntry.prototype.clearCitiesList = function() {
  this.setCitiesList([]);
};


/**
 * repeated uint32 car_types = 13;
 * @return {!Array<number>}
 */
proto.coupon.PromotionEntry.prototype.getCarTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<number>} value */
proto.coupon.PromotionEntry.prototype.setCarTypesList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionEntry.prototype.addCarTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


proto.coupon.PromotionEntry.prototype.clearCarTypesList = function() {
  this.setCarTypesList([]);
};


/**
 * repeated uint32 product_types = 14;
 * @return {!Array<number>}
 */
proto.coupon.PromotionEntry.prototype.getProductTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<number>} value */
proto.coupon.PromotionEntry.prototype.setProductTypesList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionEntry.prototype.addProductTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.coupon.PromotionEntry.prototype.clearProductTypesList = function() {
  this.setProductTypesList([]);
};


/**
 * optional string valid_from = 16;
 * @return {string}
 */
proto.coupon.PromotionEntry.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.coupon.PromotionEntry.prototype.setValidFrom = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string valid_until = 17;
 * @return {string}
 */
proto.coupon.PromotionEntry.prototype.getValidUntil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.coupon.PromotionEntry.prototype.setValidUntil = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional bool enabled = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.PromotionEntry.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.coupon.PromotionEntry.prototype.setEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string created_at = 19;
 * @return {string}
 */
proto.coupon.PromotionEntry.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.coupon.PromotionEntry.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string updated_at = 20;
 * @return {string}
 */
proto.coupon.PromotionEntry.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.coupon.PromotionEntry.prototype.setUpdatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * repeated string payment_methods = 21;
 * @return {!Array<string>}
 */
proto.coupon.PromotionEntry.prototype.getPaymentMethodsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/** @param {!Array<string>} value */
proto.coupon.PromotionEntry.prototype.setPaymentMethodsList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionEntry.prototype.addPaymentMethods = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


proto.coupon.PromotionEntry.prototype.clearPaymentMethodsList = function() {
  this.setPaymentMethodsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.PromotionDetailReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.PromotionDetailReply.repeatedFields_, null);
};
goog.inherits(proto.coupon.PromotionDetailReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.PromotionDetailReply.displayName = 'proto.coupon.PromotionDetailReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.PromotionDetailReply.repeatedFields_ = [11,12,13,14,15,25];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.PromotionDetailReply.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.PromotionDetailReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.PromotionDetailReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.PromotionDetailReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    discountType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amount: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),
    totalCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    countCheckPolicy: jspb.Message.getFieldWithDefault(msg, 8, 0),
    title: jspb.Message.getFieldWithDefault(msg, 9, ""),
    description: jspb.Message.getFieldWithDefault(msg, 10, ""),
    regionsList: jspb.Message.getRepeatedField(msg, 11),
    citiesList: jspb.Message.getRepeatedField(msg, 12),
    carTypesList: jspb.Message.getRepeatedField(msg, 13),
    productTypesList: jspb.Message.getRepeatedField(msg, 14),
    timesList: jspb.Message.toObjectList(msg.getTimesList(),
    proto.coupon.Timespan.toObject, includeInstance),
    hiredOnly: jspb.Message.getFieldWithDefault(msg, 16, false),
    validFrom: jspb.Message.getFieldWithDefault(msg, 17, ""),
    validUntil: jspb.Message.getFieldWithDefault(msg, 18, ""),
    enabled: jspb.Message.getFieldWithDefault(msg, 19, false),
    createdAt: jspb.Message.getFieldWithDefault(msg, 20, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 21, ""),
    issuedCount: jspb.Message.getFieldWithDefault(msg, 22, 0),
    usedCount: jspb.Message.getFieldWithDefault(msg, 23, 0),
    implicit: jspb.Message.getFieldWithDefault(msg, 24, false),
    paymentMethodsList: jspb.Message.getRepeatedField(msg, 25)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.PromotionDetailReply}
 */
proto.coupon.PromotionDetailReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.PromotionDetailReply;
  return proto.coupon.PromotionDetailReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.PromotionDetailReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.PromotionDetailReply}
 */
proto.coupon.PromotionDetailReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDiscountType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCountLimit(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCountCheckPolicy(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegions(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addCities(value);
      break;
    case 13:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setCarTypesList(value);
      break;
    case 14:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setProductTypesList(value);
      break;
    case 15:
      var value = new proto.coupon.Timespan;
      reader.readMessage(value,proto.coupon.Timespan.deserializeBinaryFromReader);
      msg.addTimes(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHiredOnly(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidUntil(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIssuedCount(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUsedCount(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImplicit(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.addPaymentMethods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.PromotionDetailReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.PromotionDetailReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.PromotionDetailReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.PromotionDetailReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDiscountType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountLimit();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getCountCheckPolicy();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getCarTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      13,
      f
    );
  }
  f = message.getProductTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      14,
      f
    );
  }
  f = message.getTimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.coupon.Timespan.serializeBinaryToWriter
    );
  }
  f = message.getHiredOnly();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getValidUntil();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getIssuedCount();
  if (f !== 0) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = message.getUsedCount();
  if (f !== 0) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = message.getImplicit();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getPaymentMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      25,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.coupon.PromotionDetailReply.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.PromotionDetailReply.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.coupon.PromotionDetailReply.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.PromotionDetailReply.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 discount_type = 3;
 * @return {number}
 */
proto.coupon.PromotionDetailReply.prototype.getDiscountType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.coupon.PromotionDetailReply.prototype.setDiscountType = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double amount = 4;
 * @return {number}
 */
proto.coupon.PromotionDetailReply.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.coupon.PromotionDetailReply.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string currency = 5;
 * @return {string}
 */
proto.coupon.PromotionDetailReply.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.coupon.PromotionDetailReply.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 count_limit = 6;
 * @return {number}
 */
proto.coupon.PromotionDetailReply.prototype.getCountLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.coupon.PromotionDetailReply.prototype.setCountLimit = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 total_count = 7;
 * @return {number}
 */
proto.coupon.PromotionDetailReply.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.coupon.PromotionDetailReply.prototype.setTotalCount = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 count_check_policy = 8;
 * @return {number}
 */
proto.coupon.PromotionDetailReply.prototype.getCountCheckPolicy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.coupon.PromotionDetailReply.prototype.setCountCheckPolicy = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string title = 9;
 * @return {string}
 */
proto.coupon.PromotionDetailReply.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.coupon.PromotionDetailReply.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string description = 10;
 * @return {string}
 */
proto.coupon.PromotionDetailReply.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.coupon.PromotionDetailReply.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string regions = 11;
 * @return {!Array<string>}
 */
proto.coupon.PromotionDetailReply.prototype.getRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<string>} value */
proto.coupon.PromotionDetailReply.prototype.setRegionsList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionDetailReply.prototype.addRegions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.coupon.PromotionDetailReply.prototype.clearRegionsList = function() {
  this.setRegionsList([]);
};


/**
 * repeated string cities = 12;
 * @return {!Array<string>}
 */
proto.coupon.PromotionDetailReply.prototype.getCitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<string>} value */
proto.coupon.PromotionDetailReply.prototype.setCitiesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionDetailReply.prototype.addCities = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.coupon.PromotionDetailReply.prototype.clearCitiesList = function() {
  this.setCitiesList([]);
};


/**
 * repeated uint32 car_types = 13;
 * @return {!Array<number>}
 */
proto.coupon.PromotionDetailReply.prototype.getCarTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<number>} value */
proto.coupon.PromotionDetailReply.prototype.setCarTypesList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionDetailReply.prototype.addCarTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


proto.coupon.PromotionDetailReply.prototype.clearCarTypesList = function() {
  this.setCarTypesList([]);
};


/**
 * repeated uint32 product_types = 14;
 * @return {!Array<number>}
 */
proto.coupon.PromotionDetailReply.prototype.getProductTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<number>} value */
proto.coupon.PromotionDetailReply.prototype.setProductTypesList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionDetailReply.prototype.addProductTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.coupon.PromotionDetailReply.prototype.clearProductTypesList = function() {
  this.setProductTypesList([]);
};


/**
 * repeated Timespan times = 15;
 * @return {!Array<!proto.coupon.Timespan>}
 */
proto.coupon.PromotionDetailReply.prototype.getTimesList = function() {
  return /** @type{!Array<!proto.coupon.Timespan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.Timespan, 15));
};


/** @param {!Array<!proto.coupon.Timespan>} value */
proto.coupon.PromotionDetailReply.prototype.setTimesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.coupon.Timespan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.Timespan}
 */
proto.coupon.PromotionDetailReply.prototype.addTimes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.coupon.Timespan, opt_index);
};


proto.coupon.PromotionDetailReply.prototype.clearTimesList = function() {
  this.setTimesList([]);
};


/**
 * optional bool hired_only = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.PromotionDetailReply.prototype.getHiredOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.coupon.PromotionDetailReply.prototype.setHiredOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional string valid_from = 17;
 * @return {string}
 */
proto.coupon.PromotionDetailReply.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.coupon.PromotionDetailReply.prototype.setValidFrom = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string valid_until = 18;
 * @return {string}
 */
proto.coupon.PromotionDetailReply.prototype.getValidUntil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.coupon.PromotionDetailReply.prototype.setValidUntil = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bool enabled = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.PromotionDetailReply.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.coupon.PromotionDetailReply.prototype.setEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional string created_at = 20;
 * @return {string}
 */
proto.coupon.PromotionDetailReply.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.coupon.PromotionDetailReply.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string updated_at = 21;
 * @return {string}
 */
proto.coupon.PromotionDetailReply.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.coupon.PromotionDetailReply.prototype.setUpdatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional uint32 issued_count = 22;
 * @return {number}
 */
proto.coupon.PromotionDetailReply.prototype.getIssuedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.coupon.PromotionDetailReply.prototype.setIssuedCount = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional uint32 used_count = 23;
 * @return {number}
 */
proto.coupon.PromotionDetailReply.prototype.getUsedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.coupon.PromotionDetailReply.prototype.setUsedCount = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional bool implicit = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.PromotionDetailReply.prototype.getImplicit = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.coupon.PromotionDetailReply.prototype.setImplicit = function(value) {
  jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * repeated string payment_methods = 25;
 * @return {!Array<string>}
 */
proto.coupon.PromotionDetailReply.prototype.getPaymentMethodsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 25));
};


/** @param {!Array<string>} value */
proto.coupon.PromotionDetailReply.prototype.setPaymentMethodsList = function(value) {
  jspb.Message.setField(this, 25, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.PromotionDetailReply.prototype.addPaymentMethods = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 25, value, opt_index);
};


proto.coupon.PromotionDetailReply.prototype.clearPaymentMethodsList = function() {
  this.setPaymentMethodsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.ListPromotionReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.ListPromotionReply.repeatedFields_, proto.coupon.ListPromotionReply.oneofGroups_);
};
goog.inherits(proto.coupon.ListPromotionReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.ListPromotionReply.displayName = 'proto.coupon.ListPromotionReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.ListPromotionReply.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.coupon.ListPromotionReply.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.coupon.ListPromotionReply.PageCase = {
  PAGE_NOT_SET: 0,
  HAS_NEXT: 2,
  PAGINATION: 3
};

/**
 * @return {proto.coupon.ListPromotionReply.PageCase}
 */
proto.coupon.ListPromotionReply.prototype.getPageCase = function() {
  return /** @type {proto.coupon.ListPromotionReply.PageCase} */(jspb.Message.computeOneofCase(this, proto.coupon.ListPromotionReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.ListPromotionReply.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.ListPromotionReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.ListPromotionReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListPromotionReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    promotionsList: jspb.Message.toObjectList(msg.getPromotionsList(),
    proto.coupon.PromotionEntry.toObject, includeInstance),
    hasNext: jspb.Message.getFieldWithDefault(msg, 2, false),
    pagination: (f = msg.getPagination()) && proto.coupon.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.ListPromotionReply}
 */
proto.coupon.ListPromotionReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.ListPromotionReply;
  return proto.coupon.ListPromotionReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.ListPromotionReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.ListPromotionReply}
 */
proto.coupon.ListPromotionReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.coupon.PromotionEntry;
      reader.readMessage(value,proto.coupon.PromotionEntry.deserializeBinaryFromReader);
      msg.addPromotions(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasNext(value);
      break;
    case 3:
      var value = new proto.coupon.Pagination;
      reader.readMessage(value,proto.coupon.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.ListPromotionReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.ListPromotionReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.ListPromotionReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListPromotionReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromotionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.coupon.PromotionEntry.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.coupon.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PromotionEntry promotions = 1;
 * @return {!Array<!proto.coupon.PromotionEntry>}
 */
proto.coupon.ListPromotionReply.prototype.getPromotionsList = function() {
  return /** @type{!Array<!proto.coupon.PromotionEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.PromotionEntry, 1));
};


/** @param {!Array<!proto.coupon.PromotionEntry>} value */
proto.coupon.ListPromotionReply.prototype.setPromotionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.coupon.PromotionEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.PromotionEntry}
 */
proto.coupon.ListPromotionReply.prototype.addPromotions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.coupon.PromotionEntry, opt_index);
};


proto.coupon.ListPromotionReply.prototype.clearPromotionsList = function() {
  this.setPromotionsList([]);
};


/**
 * optional bool has_next = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.ListPromotionReply.prototype.getHasNext = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.coupon.ListPromotionReply.prototype.setHasNext = function(value) {
  jspb.Message.setOneofField(this, 2, proto.coupon.ListPromotionReply.oneofGroups_[0], value);
};


proto.coupon.ListPromotionReply.prototype.clearHasNext = function() {
  jspb.Message.setOneofField(this, 2, proto.coupon.ListPromotionReply.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.coupon.ListPromotionReply.prototype.hasHasNext = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.coupon.Pagination}
 */
proto.coupon.ListPromotionReply.prototype.getPagination = function() {
  return /** @type{?proto.coupon.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.coupon.Pagination, 3));
};


/** @param {?proto.coupon.Pagination|undefined} value */
proto.coupon.ListPromotionReply.prototype.setPagination = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.coupon.ListPromotionReply.oneofGroups_[0], value);
};


proto.coupon.ListPromotionReply.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.coupon.ListPromotionReply.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.PromotionDetailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.PromotionDetailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.PromotionDetailRequest.displayName = 'proto.coupon.PromotionDetailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.PromotionDetailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.PromotionDetailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.PromotionDetailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.PromotionDetailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.PromotionDetailRequest}
 */
proto.coupon.PromotionDetailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.PromotionDetailRequest;
  return proto.coupon.PromotionDetailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.PromotionDetailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.PromotionDetailRequest}
 */
proto.coupon.PromotionDetailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.PromotionDetailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.PromotionDetailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.PromotionDetailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.PromotionDetailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.coupon.PromotionDetailRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.PromotionDetailRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.ListPromotionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.ListPromotionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.ListPromotionRequest.displayName = 'proto.coupon.ListPromotionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.ListPromotionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.ListPromotionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.ListPromotionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListPromotionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.ListPromotionRequest}
 */
proto.coupon.ListPromotionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.ListPromotionRequest;
  return proto.coupon.ListPromotionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.ListPromotionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.ListPromotionRequest}
 */
proto.coupon.ListPromotionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.ListPromotionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.ListPromotionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.ListPromotionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.ListPromotionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 page = 1;
 * @return {number}
 */
proto.coupon.ListPromotionRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.ListPromotionRequest.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.coupon.ListPromotionRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.coupon.ListPromotionRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.IssuePromotionCouponRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.IssuePromotionCouponRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.IssuePromotionCouponRequest.displayName = 'proto.coupon.IssuePromotionCouponRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.IssuePromotionCouponRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.IssuePromotionCouponRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.IssuePromotionCouponRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.IssuePromotionCouponRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.IssuePromotionCouponRequest}
 */
proto.coupon.IssuePromotionCouponRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.IssuePromotionCouponRequest;
  return proto.coupon.IssuePromotionCouponRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.IssuePromotionCouponRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.IssuePromotionCouponRequest}
 */
proto.coupon.IssuePromotionCouponRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.IssuePromotionCouponRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.IssuePromotionCouponRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.IssuePromotionCouponRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.IssuePromotionCouponRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.coupon.IssuePromotionCouponRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.IssuePromotionCouponRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.coupon.IssuePromotionCouponRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.IssuePromotionCouponRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CheckCouponAvailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.CheckCouponAvailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CheckCouponAvailRequest.displayName = 'proto.coupon.CheckCouponAvailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CheckCouponAvailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CheckCouponAvailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CheckCouponAvailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CheckCouponAvailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    carType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    productType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    region: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    datetime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fare: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 7, ""),
    timezone: jspb.Message.getFieldWithDefault(msg, 8, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    code: jspb.Message.getFieldWithDefault(msg, 10, ""),
    skipValidityCheck: jspb.Message.getFieldWithDefault(msg, 11, false),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CheckCouponAvailRequest}
 */
proto.coupon.CheckCouponAvailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CheckCouponAvailRequest;
  return proto.coupon.CheckCouponAvailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CheckCouponAvailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CheckCouponAvailRequest}
 */
proto.coupon.CheckCouponAvailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCarType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProductType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatetime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFare(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimezone(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipValidityCheck(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CheckCouponAvailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CheckCouponAvailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CheckCouponAvailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CheckCouponAvailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarType();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getProductType();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDatetime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFare();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTimezone();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSkipValidityCheck();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional uint32 car_type = 1;
 * @return {number}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getCarType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.CheckCouponAvailRequest.prototype.setCarType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 product_type = 2;
 * @return {number}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getProductType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.coupon.CheckCouponAvailRequest.prototype.setProductType = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string region = 3;
 * @return {string}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.coupon.CheckCouponAvailRequest.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.coupon.CheckCouponAvailRequest.prototype.setCity = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string datetime = 5;
 * @return {string}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getDatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.coupon.CheckCouponAvailRequest.prototype.setDatetime = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double fare = 6;
 * @return {number}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getFare = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.coupon.CheckCouponAvailRequest.prototype.setFare = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string currency = 7;
 * @return {string}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.coupon.CheckCouponAvailRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint32 timezone = 8;
 * @return {number}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getTimezone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.coupon.CheckCouponAvailRequest.prototype.setTimezone = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string user_id = 9;
 * @return {string}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.coupon.CheckCouponAvailRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string code = 10;
 * @return {string}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.coupon.CheckCouponAvailRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool skip_validity_check = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getSkipValidityCheck = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.coupon.CheckCouponAvailRequest.prototype.setSkipValidityCheck = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string payment_method = 12;
 * @return {string}
 */
proto.coupon.CheckCouponAvailRequest.prototype.getPaymentMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.coupon.CheckCouponAvailRequest.prototype.setPaymentMethod = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CheckCouponReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.CheckCouponReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CheckCouponReply.displayName = 'proto.coupon.CheckCouponReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CheckCouponReply.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CheckCouponReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CheckCouponReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CheckCouponReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicable: jspb.Message.getFieldWithDefault(msg, 1, false),
    originalPrice: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    discountedPrice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    title: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CheckCouponReply}
 */
proto.coupon.CheckCouponReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CheckCouponReply;
  return proto.coupon.CheckCouponReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CheckCouponReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CheckCouponReply}
 */
proto.coupon.CheckCouponReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApplicable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOriginalPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountedPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CheckCouponReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CheckCouponReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CheckCouponReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CheckCouponReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getOriginalPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDiscountedPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool applicable = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.CheckCouponReply.prototype.getApplicable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.coupon.CheckCouponReply.prototype.setApplicable = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double original_price = 2;
 * @return {number}
 */
proto.coupon.CheckCouponReply.prototype.getOriginalPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.coupon.CheckCouponReply.prototype.setOriginalPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double discounted_price = 3;
 * @return {number}
 */
proto.coupon.CheckCouponReply.prototype.getDiscountedPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.coupon.CheckCouponReply.prototype.setDiscountedPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.coupon.CheckCouponReply.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.coupon.CheckCouponReply.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CouponCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.CouponCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CouponCountRequest.displayName = 'proto.coupon.CouponCountRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CouponCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CouponCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CouponCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CouponCountRequest}
 */
proto.coupon.CouponCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CouponCountRequest;
  return proto.coupon.CouponCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CouponCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CouponCountRequest}
 */
proto.coupon.CouponCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CouponCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CouponCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CouponCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.coupon.CouponCountRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.CouponCountRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 valid = 2;
 * @return {number}
 */
proto.coupon.CouponCountRequest.prototype.getValid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.coupon.CouponCountRequest.prototype.setValid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.CouponCountReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.CouponCountReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.CouponCountReply.displayName = 'proto.coupon.CouponCountReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.CouponCountReply.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.CouponCountReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.CouponCountReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponCountReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.CouponCountReply}
 */
proto.coupon.CouponCountReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.CouponCountReply;
  return proto.coupon.CouponCountReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.CouponCountReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.CouponCountReply}
 */
proto.coupon.CouponCountReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.CouponCountReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.CouponCountReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.CouponCountReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.CouponCountReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 count = 1;
 * @return {number}
 */
proto.coupon.CouponCountReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.CouponCountReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.UpdatePromotionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.coupon.UpdatePromotionRequest.repeatedFields_, null);
};
goog.inherits(proto.coupon.UpdatePromotionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.UpdatePromotionRequest.displayName = 'proto.coupon.UpdatePromotionRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.coupon.UpdatePromotionRequest.repeatedFields_ = [10,11,12,13,15,20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.UpdatePromotionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.UpdatePromotionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.UpdatePromotionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.UpdatePromotionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    discountType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amount: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    countLimit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    totalCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    countCheckPolicy: jspb.Message.getFieldWithDefault(msg, 9, 0),
    regionsList: jspb.Message.getRepeatedField(msg, 10),
    citiesList: jspb.Message.getRepeatedField(msg, 11),
    carTypesList: jspb.Message.getRepeatedField(msg, 12),
    productTypesList: jspb.Message.getRepeatedField(msg, 13),
    hiredOnly: jspb.Message.getFieldWithDefault(msg, 14, false),
    timesList: jspb.Message.toObjectList(msg.getTimesList(),
    proto.coupon.Timespan.toObject, includeInstance),
    validFrom: jspb.Message.getFieldWithDefault(msg, 16, ""),
    validUntil: jspb.Message.getFieldWithDefault(msg, 17, ""),
    enabled: jspb.Message.getFieldWithDefault(msg, 18, false),
    implicit: jspb.Message.getFieldWithDefault(msg, 19, false),
    paymentMethodsList: jspb.Message.getRepeatedField(msg, 20)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.UpdatePromotionRequest}
 */
proto.coupon.UpdatePromotionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.UpdatePromotionRequest;
  return proto.coupon.UpdatePromotionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.UpdatePromotionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.UpdatePromotionRequest}
 */
proto.coupon.UpdatePromotionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDiscountType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCountLimit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCountCheckPolicy(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegions(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addCities(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setCarTypesList(value);
      break;
    case 13:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setProductTypesList(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHiredOnly(value);
      break;
    case 15:
      var value = new proto.coupon.Timespan;
      reader.readMessage(value,proto.coupon.Timespan.deserializeBinaryFromReader);
      msg.addTimes(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidUntil(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImplicit(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addPaymentMethods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.UpdatePromotionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.UpdatePromotionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.UpdatePromotionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.UpdatePromotionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDiscountType();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountLimit();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getCountCheckPolicy();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getCarTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      12,
      f
    );
  }
  f = message.getProductTypesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      13,
      f
    );
  }
  f = message.getHiredOnly();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getTimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.coupon.Timespan.serializeBinaryToWriter
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getValidUntil();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getImplicit();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getPaymentMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.coupon.UpdatePromotionRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.coupon.UpdatePromotionRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.coupon.UpdatePromotionRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.UpdatePromotionRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.coupon.UpdatePromotionRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.coupon.UpdatePromotionRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 discount_type = 4;
 * @return {number}
 */
proto.coupon.UpdatePromotionRequest.prototype.getDiscountType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.coupon.UpdatePromotionRequest.prototype.setDiscountType = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double amount = 5;
 * @return {number}
 */
proto.coupon.UpdatePromotionRequest.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.coupon.UpdatePromotionRequest.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.coupon.UpdatePromotionRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.coupon.UpdatePromotionRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 count_limit = 7;
 * @return {number}
 */
proto.coupon.UpdatePromotionRequest.prototype.getCountLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.coupon.UpdatePromotionRequest.prototype.setCountLimit = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 total_count = 8;
 * @return {number}
 */
proto.coupon.UpdatePromotionRequest.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.coupon.UpdatePromotionRequest.prototype.setTotalCount = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 count_check_policy = 9;
 * @return {number}
 */
proto.coupon.UpdatePromotionRequest.prototype.getCountCheckPolicy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.coupon.UpdatePromotionRequest.prototype.setCountCheckPolicy = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string regions = 10;
 * @return {!Array<string>}
 */
proto.coupon.UpdatePromotionRequest.prototype.getRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.coupon.UpdatePromotionRequest.prototype.setRegionsList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.UpdatePromotionRequest.prototype.addRegions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.coupon.UpdatePromotionRequest.prototype.clearRegionsList = function() {
  this.setRegionsList([]);
};


/**
 * repeated string cities = 11;
 * @return {!Array<string>}
 */
proto.coupon.UpdatePromotionRequest.prototype.getCitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<string>} value */
proto.coupon.UpdatePromotionRequest.prototype.setCitiesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.UpdatePromotionRequest.prototype.addCities = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.coupon.UpdatePromotionRequest.prototype.clearCitiesList = function() {
  this.setCitiesList([]);
};


/**
 * repeated uint32 car_types = 12;
 * @return {!Array<number>}
 */
proto.coupon.UpdatePromotionRequest.prototype.getCarTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.coupon.UpdatePromotionRequest.prototype.setCarTypesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.UpdatePromotionRequest.prototype.addCarTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.coupon.UpdatePromotionRequest.prototype.clearCarTypesList = function() {
  this.setCarTypesList([]);
};


/**
 * repeated uint32 product_types = 13;
 * @return {!Array<number>}
 */
proto.coupon.UpdatePromotionRequest.prototype.getProductTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<number>} value */
proto.coupon.UpdatePromotionRequest.prototype.setProductTypesList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.coupon.UpdatePromotionRequest.prototype.addProductTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


proto.coupon.UpdatePromotionRequest.prototype.clearProductTypesList = function() {
  this.setProductTypesList([]);
};


/**
 * optional bool hired_only = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.UpdatePromotionRequest.prototype.getHiredOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.coupon.UpdatePromotionRequest.prototype.setHiredOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * repeated Timespan times = 15;
 * @return {!Array<!proto.coupon.Timespan>}
 */
proto.coupon.UpdatePromotionRequest.prototype.getTimesList = function() {
  return /** @type{!Array<!proto.coupon.Timespan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.coupon.Timespan, 15));
};


/** @param {!Array<!proto.coupon.Timespan>} value */
proto.coupon.UpdatePromotionRequest.prototype.setTimesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.coupon.Timespan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.coupon.Timespan}
 */
proto.coupon.UpdatePromotionRequest.prototype.addTimes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.coupon.Timespan, opt_index);
};


proto.coupon.UpdatePromotionRequest.prototype.clearTimesList = function() {
  this.setTimesList([]);
};


/**
 * optional string valid_from = 16;
 * @return {string}
 */
proto.coupon.UpdatePromotionRequest.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.coupon.UpdatePromotionRequest.prototype.setValidFrom = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string valid_until = 17;
 * @return {string}
 */
proto.coupon.UpdatePromotionRequest.prototype.getValidUntil = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.coupon.UpdatePromotionRequest.prototype.setValidUntil = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional bool enabled = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.UpdatePromotionRequest.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.coupon.UpdatePromotionRequest.prototype.setEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool implicit = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.coupon.UpdatePromotionRequest.prototype.getImplicit = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.coupon.UpdatePromotionRequest.prototype.setImplicit = function(value) {
  jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * repeated string payment_methods = 20;
 * @return {!Array<string>}
 */
proto.coupon.UpdatePromotionRequest.prototype.getPaymentMethodsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/** @param {!Array<string>} value */
proto.coupon.UpdatePromotionRequest.prototype.setPaymentMethodsList = function(value) {
  jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.coupon.UpdatePromotionRequest.prototype.addPaymentMethods = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


proto.coupon.UpdatePromotionRequest.prototype.clearPaymentMethodsList = function() {
  this.setPaymentMethodsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.coupon.RegisterCouponRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.coupon.RegisterCouponRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.coupon.RegisterCouponRequest.displayName = 'proto.coupon.RegisterCouponRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.coupon.RegisterCouponRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.coupon.RegisterCouponRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.coupon.RegisterCouponRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.RegisterCouponRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.coupon.RegisterCouponRequest}
 */
proto.coupon.RegisterCouponRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.coupon.RegisterCouponRequest;
  return proto.coupon.RegisterCouponRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.coupon.RegisterCouponRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.coupon.RegisterCouponRequest}
 */
proto.coupon.RegisterCouponRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.coupon.RegisterCouponRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.coupon.RegisterCouponRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.coupon.RegisterCouponRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.coupon.RegisterCouponRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.coupon.RegisterCouponRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.coupon.RegisterCouponRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.coupon.RegisterCouponRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.coupon.RegisterCouponRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.coupon);
